{"version":3,"sources":["components/Question.js","components/Timer.js","pages/TestPage.js","pages/ScorePage.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","QuestionContainer","Question","questionText","onFocusFuction","onAnswerChange","onTestCompleted","id","useState","question","answer","setAnswer","inputDom","useRef","className","split","map","item","index","answerLetter","length","undefined","style","color","ref","value","onChange","val","inputValue","target","allInput","current","parentElement","getElementsByTagName","nextElement","focus","onKeyDown","event","pressKey","key","prevElement","preventDefault","setSelectionRange","onFocus","Timer","props","initialMinute","initialSeconds","start","timeOutFunction","timeReturnFuc","minutes","setMinutes","seconds","setSeconds","useEffect","myInterval","setInterval","console","log","clearInterval","TestPage","initData","navigate","useNavigate","allData","setAllData","timerStart","setTimerStart","handleAnswerChange","questionId","newData","startTimer","handleTimeOut","state","data","endMin","endSec","startMin","startSec","Questions","min","sec","ScorePage","useLocation","correctRate","setCorrectRate","correctNum","setCorrectNum","wrongNum","setWrongNum","speedPerMin","setSpeedPerMin","anserData","duringTime","duringMin","Math","floor","toString","padStart","duringSec","correctNumCount","answerCharNum","forEach","questionArr","answerArr","questionChar","round","CountCorrectNum","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcba4d9c.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Question = (\r\n    {\r\n        questionText = \"\",\r\n        onFocusFuction = null,\r\n        onAnswerChange = null,\r\n        onTestCompleted = null,\r\n        id = 0,\r\n    }) => {\r\n    const [question, setQuestion] = useState(questionText);\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const inputDom = useRef();\r\n\r\n    const handleAnserChange = (val) => {\r\n        let inputValue = val.target.value;\r\n        setAnswer(inputValue);\r\n        onAnswerChange(inputValue, id);\r\n        let allInput = inputDom.current.parentElement.parentElement.getElementsByTagName(\"input\");\r\n        let nextElement = allInput[id + 1];\r\n        if (question.length - 1 === answer.length) {\r\n            if (id === allInput.length - 1) {\r\n                onTestCompleted();\r\n            } else {\r\n                nextElement.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        let pressKey = event.key;\r\n        let allInput = event.target.parentElement.parentElement.getElementsByTagName(\"input\");\r\n        let nextElement = allInput[id + 1];\r\n        let prevElement = allInput[id - 1];\r\n        if (id < allInput.length - 1 && (pressKey === \"Enter\" || pressKey === \"ArrowDown\")) {\r\n            nextElement.focus();\r\n        }\r\n\r\n        if (id !== 0 && pressKey === \"ArrowUp\") {\r\n            const length = prevElement.value.length;\r\n            prevElement.focus();\r\n            event.preventDefault();\r\n            prevElement.setSelectionRange(length, length);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"App\">\r\n            <QuestionContainer>\r\n                {\r\n                    question.split('').map((item, index) => {\r\n                        let answerLetter = answer.split('');\r\n                        if (answerLetter.length !== 0 && answerLetter[index] !== undefined) {\r\n                            if (answerLetter[index] === item) {\r\n                                return <div style={{ color: \"#272EF0\" }} key={index}>{item}</div>\r\n                            } else {\r\n                                return <div style={{ color: \"#D11\" }} key={index}>{item}</div>\r\n                            }\r\n                        }\r\n                        return <div key={index}>{item}</div>\r\n                    })\r\n                }\r\n            </QuestionContainer>\r\n            <input ref={inputDom} value={answer} onChange={handleAnserChange} onKeyDown={handleKeyPress} onFocus={onFocusFuction} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n`;\r\n\r\nconst QuestionContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default Question\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Timer = (props) => {\r\n    const { initialMinute = 0, initialSeconds = 0, start = false, timeOutFunction = null, timeReturnFuc = null } = props;\r\n    const [minutes, setMinutes] = useState(initialMinute);\r\n    const [seconds, setSeconds] = useState(initialSeconds);\r\n\r\n    useEffect(() => {\r\n        if (start) {\r\n            let myInterval = setInterval(() => {\r\n                console.log(\"計時\");\r\n                if (seconds > 0) {\r\n                    setSeconds(seconds - 1);\r\n                }\r\n                if (seconds === 0) {\r\n                    if (minutes === 0) {\r\n                        clearInterval(myInterval);\r\n                    } else {\r\n                        setMinutes(minutes - 1);\r\n                        setSeconds(59);\r\n                    }\r\n                }\r\n                timeReturnFuc(minutes, seconds);\r\n            }, 1000)\r\n            return () => {\r\n                // clearInterval(myInterval);\r\n            };\r\n        } else {\r\n            return\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            {minutes === 0 && seconds === 0\r\n                ? timeOutFunction()\r\n                : <h1> {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Question from \"../components/Question\";\r\nimport Timer from \"../components/Timer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst TestPage = () => {\r\n\r\n    const initData = [\r\n        {\r\n            question: \"我有一隻小毛驢\",\r\n            answer: \"\",\r\n        },\r\n        {\r\n            question: \"我從來也不騎\",\r\n            answer: \"\",\r\n        },\r\n        {\r\n            question: \"有一天我心血來潮\",\r\n            answer: \"\",\r\n        },\r\n    ];\r\n\r\n    const initMin = 10;\r\n    const initSec = 10;\r\n    const navigate = useNavigate();\r\n\r\n    const [allData, setAllData] = useState(initData);\r\n    const [minutes, setMinutes] = useState(initMin);\r\n    const [seconds, setSeconds] = useState(initSec);\r\n    const [timerStart, setTimerStart] = useState(false);\r\n\r\n\r\n    // 處理輸入答案\r\n    const handleAnswerChange = (value, questionId) => {\r\n        let newData = [...allData];\r\n        newData[questionId].answer = value;\r\n        setAllData([...newData]);\r\n    }\r\n\r\n    // 開始計時\r\n    const startTimer = () => {\r\n        setTimerStart(true);\r\n    }\r\n\r\n    // 接收計時器回傳的時間\r\n    const handleTimeReturn = (min, sec) => {\r\n        setMinutes(min);\r\n        setSeconds(sec);\r\n    }\r\n\r\n    // 計時器結束的時候\r\n    const handleTimeOut = () => {\r\n        navigate('score', { state: { data: allData, endMin: minutes, endSec: seconds, startMin: initMin, startSec: initSec } })\r\n    }\r\n\r\n    const Questions = initData.map((item, index) => {\r\n        return <Question questionText={item.question} key={index} id={index} onFocusFuction={startTimer} onAnswerChange={handleAnswerChange} onTestCompleted={handleTimeOut} />\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <Container className=\"App\">\r\n            {Questions}\r\n            <Timer initialMinute={minutes} initialSeconds={seconds} start={timerStart} timeOutFunction={handleTimeOut} timeReturnFuc={handleTimeReturn} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n`;\r\n\r\nexport default TestPage;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router';\r\n\r\nconst ScorePage = () => {\r\n    const { state } = useLocation();\r\n    const [correctRate, setCorrectRate] = useState();\r\n    const [correctNum, setCorrectNum] = useState();\r\n    const [wrongNum, setWrongNum] = useState();\r\n    const [speedPerMin, setSpeedPerMin] = useState();\r\n    const [timeCost, setTimeCost] = useState();\r\n\r\n    const anserData = state.data;\r\n    const endMin = state.endMin;\r\n    const endSec = state.endSec + 1;\r\n    const startMin = state.startMin;\r\n    const startSec = state.startSec;\r\n\r\n    // 計算花費時間\r\n    const duringTime = ((startMin * 60) + startSec) - ((endMin * 60) + endSec);\r\n    const duringMin = Math.floor(duringTime / 60).toString().padStart(2, '0');\r\n    const duringSec = (duringTime % 60).toString().padStart(2, '0');\r\n\r\n    // 計算打對字幾個\r\n    const CountCorrectNum = () => {\r\n\r\n        console.log(anserData);\r\n        let correctNumCount = 0;\r\n        let questionCharNum = 0;\r\n        let answerCharNum = 0;\r\n        anserData.forEach((item) => {\r\n            let questionArr = item.question.split('');\r\n            let answerArr = item.answer.split('');\r\n            questionCharNum += questionArr.length;\r\n            answerCharNum += answerArr.length;\r\n            questionArr.forEach((questionChar, index) => {\r\n                if (questionChar === answerArr[index]) {\r\n                    correctNumCount++;\r\n                }\r\n            });\r\n        });\r\n        setCorrectNum(correctNumCount);\r\n        setWrongNum(answerCharNum - correctNumCount);\r\n        setCorrectRate(Math.round(correctNumCount / answerCharNum * 10000) / 100);\r\n        setSpeedPerMin(Math.floor(answerCharNum / duringTime) * 60);\r\n    }\r\n\r\n\r\n    console.log(duringMin, duringSec);\r\n\r\n\r\n    useEffect(() => {\r\n        CountCorrectNum();\r\n        return () => {\r\n\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div>正確率：{correctRate}%</div>\r\n            <div>打對字：{correctNum}</div>\r\n            <div>打錯字：{wrongNum}</div>\r\n            <div>速度：{speedPerMin} 字/每分鐘</div>\r\n            <div>花費時間：{duringMin}：{duringSec}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScorePage\r\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport TestPage from \"./pages/TestPage\";\nimport ScorePage from \"./pages/ScorePage\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/type-test/\" element={<TestPage />} />\n          <Route path=\"/type-test/test\" element={<TestPage />} />\n          <Route path=\"/type-test/score\" element={<ScorePage />} />\n        </Routes>\n      </Router>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}